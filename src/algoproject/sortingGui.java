/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package algoproject;

import java.net.URL;
import javax.swing.Icon;
import javax.swing.ImageIcon;

/**
 *
 * @author Dell
 */
public class sortingGui extends javax.swing.JFrame {

    /**
     * Creates new form sortingGui
     */
    public sortingGui() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        quickSort = new javax.swing.JButton();
        bubbleSort = new javax.swing.JButton();
        heapSort = new javax.swing.JButton();
        mergeSort = new javax.swing.JButton();
        bucketSort = new javax.swing.JButton();
        radixSort = new javax.swing.JButton();
        countingSort = new javax.swing.JButton();
        backButton = new javax.swing.JButton();
        complexity = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/algoproject/sort-ascending-icon.png"))); // NOI18N
        jLabel1.setText("Sorting Algorithms");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(143, 19, -1, 60));

        quickSort.setText("Quick Sort");
        quickSort.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                quickSortMouseDragged(evt);
            }
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                quickSortMouseMoved(evt);
            }
        });
        quickSort.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                quickSortActionPerformed(evt);
            }
        });
        getContentPane().add(quickSort, new org.netbeans.lib.awtextra.AbsoluteConstraints(35, 90, 170, 40));

        bubbleSort.setText("Bubble Sort");
        bubbleSort.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                bubbleSortMouseMoved(evt);
            }
        });
        bubbleSort.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bubbleSortActionPerformed(evt);
            }
        });
        getContentPane().add(bubbleSort, new org.netbeans.lib.awtextra.AbsoluteConstraints(35, 150, 170, 40));

        heapSort.setText("Heap Sort");
        heapSort.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                heapSortMouseMoved(evt);
            }
        });
        heapSort.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                heapSortActionPerformed(evt);
            }
        });
        getContentPane().add(heapSort, new org.netbeans.lib.awtextra.AbsoluteConstraints(35, 259, 170, 40));

        mergeSort.setText("Merge Sort");
        mergeSort.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                mergeSortMouseMoved(evt);
            }
        });
        mergeSort.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mergeSortActionPerformed(evt);
            }
        });
        getContentPane().add(mergeSort, new org.netbeans.lib.awtextra.AbsoluteConstraints(35, 201, 170, 40));

        bucketSort.setText("Bucket Sort");
        bucketSort.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                bucketSortMouseMoved(evt);
            }
        });
        bucketSort.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bucketSortActionPerformed(evt);
            }
        });
        getContentPane().add(bucketSort, new org.netbeans.lib.awtextra.AbsoluteConstraints(284, 90, 170, 40));

        radixSort.setText("Radix Sort");
        radixSort.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                radixSortMouseMoved(evt);
            }
        });
        radixSort.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radixSortActionPerformed(evt);
            }
        });
        getContentPane().add(radixSort, new org.netbeans.lib.awtextra.AbsoluteConstraints(284, 150, 170, 40));

        countingSort.setText("Counting Sort");
        countingSort.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                countingSortMouseMoved(evt);
            }
        });
        countingSort.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                countingSortActionPerformed(evt);
            }
        });
        getContentPane().add(countingSort, new org.netbeans.lib.awtextra.AbsoluteConstraints(284, 201, 170, 40));

        backButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/algoproject/back-icon.png"))); // NOI18N
        backButton.setText("Back");
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });
        getContentPane().add(backButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 394, -1, -1));

        complexity.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        getContentPane().add(complexity, new org.netbeans.lib.awtextra.AbsoluteConstraints(284, 259, 170, 40));

        jPanel2.setLayout(new javax.swing.OverlayLayout(jPanel2));
        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        jLabel11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/algoproject/image.jpg"))); // NOI18N
        getContentPane().add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 540, 450));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void quickSortActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_quickSortActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
        quickSortGui obj=new quickSortGui();
        obj.setVisible(true);        
    }//GEN-LAST:event_quickSortActionPerformed

    private void mergeSortActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mergeSortActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
        mergeSortGui obj=new mergeSortGui();
        obj.setVisible(true);
    }//GEN-LAST:event_mergeSortActionPerformed

    private void bucketSortActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bucketSortActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
        bucketSortGui obj=new bucketSortGui();
        obj.setVisible(true);
    }//GEN-LAST:event_bucketSortActionPerformed

    private void countingSortActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_countingSortActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
        countingSortGui obj=new countingSortGui();
        obj.setVisible(true);
    }//GEN-LAST:event_countingSortActionPerformed

    private void bubbleSortActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bubbleSortActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
        bubbleSortGui obj=new bubbleSortGui();
        obj.setVisible(true);
    }//GEN-LAST:event_bubbleSortActionPerformed

    private void heapSortActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_heapSortActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
        heapSortGui obj=new heapSortGui();
        obj.setVisible(true);
    }//GEN-LAST:event_heapSortActionPerformed

    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
        mainGUI obj=new mainGUI();
        obj.setVisible(true);
    }//GEN-LAST:event_backButtonActionPerformed

    private void radixSortActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radixSortActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
        radixSortGui obj=new radixSortGui();
        obj.setVisible(true);
    }//GEN-LAST:event_radixSortActionPerformed

    private void quickSortMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_quickSortMouseMoved
        // TODO add your handling code here:
    this.complexity.setText("<html>Worst Case: O(n^2)<br>Best Case: O(nlogn)</html>");

    }//GEN-LAST:event_quickSortMouseMoved

    private void quickSortMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_quickSortMouseDragged
        // TODO add your handling code here:
    }//GEN-LAST:event_quickSortMouseDragged

    private void bubbleSortMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bubbleSortMouseMoved
        // TODO add your handling code here:
    this.complexity.setText("<html>Worst Case: O(n^2)<br>Best Case: O(n)</html>");
    }//GEN-LAST:event_bubbleSortMouseMoved

    private void mergeSortMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mergeSortMouseMoved
        // TODO add your handling code here:
    this.complexity.setText("<html>Worst Case: O(nlogn)<br>Best Case: O(nlogn)</html>");
    }//GEN-LAST:event_mergeSortMouseMoved

    private void heapSortMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_heapSortMouseMoved
        // TODO add your handling code here:
    this.complexity.setText("<html>Worst Case: O(nlogn)<br>Best Case: O(nlogn)</html>");
    }//GEN-LAST:event_heapSortMouseMoved

    private void bucketSortMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bucketSortMouseMoved
        // TODO add your handling code here:
    this.complexity.setText("<html>Worst Case: O(n+k)<br>Best Case: O(n+k)</html>");
    }//GEN-LAST:event_bucketSortMouseMoved

    private void radixSortMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_radixSortMouseMoved
        // TODO add your handling code here:
    this.complexity.setText("<html>Worst Case: O(n*k)<br>Best Case: O(n*k)</html>");
    }//GEN-LAST:event_radixSortMouseMoved

    private void countingSortMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_countingSortMouseMoved
        // TODO add your handling code here:
    this.complexity.setText("<html>Worst Case: O(n+k)<br>Best Case: O(n+k)</html>");
    }//GEN-LAST:event_countingSortMouseMoved

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(sortingGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(sortingGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(sortingGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(sortingGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new sortingGui().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backButton;
    private javax.swing.JButton bubbleSort;
    private javax.swing.JButton bucketSort;
    private javax.swing.JLabel complexity;
    private javax.swing.JButton countingSort;
    private javax.swing.JButton heapSort;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JButton mergeSort;
    private javax.swing.JButton quickSort;
    private javax.swing.JButton radixSort;
    // End of variables declaration//GEN-END:variables
}
